name: Claude Code Autonomous PR Generation

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]
  pull_request_comment:
    types: [created, edited]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  claude-code-action:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '@claude') || contains(github.event.issue.body, '@claude')
    
    steps:
      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Run Claude Code Action
        uses: anthropics/claude-code-action@latest
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: "claude-opus-4-20250514"  # Using the best model
          max_iterations: 10
          temperature: 0.2  # Lower temperature for more consistent code
          settings: |
            {
              "model": "claude-opus-4-20250514",
              "test_command": "make test",
              "lint_command": "make lint",
              "type_check_command": "make type-check",
              "format_command": "make format",
              "env": {
                "PYTHONPATH": "src",
                "ENVIRONMENT": "test"
              }
            }

      - name: Post Status Comment
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const issue_number = context.issue?.number || context.payload.pull_request?.number;
            if (issue_number) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: `âœ… Claude Code has completed processing this request. Check the linked PR for implementation.`
              });
            }